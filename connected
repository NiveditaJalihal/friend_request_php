using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.SqlClient;

namespace ExamAdo
{
   public  class Detail
    {
       SqlConnection con = new SqlConnection("data source=.;database=Exam;integrated security=true;");
       SqlCommand cmd=new SqlCommand();
       public void Insert()
       {
           Console.WriteLine("enter product name");
           string name = Console.ReadLine();
           Console.WriteLine("enter vendor name");
           string vendor = Console.ReadLine();
           Console.WriteLine("enter category name");
           string category = Console.ReadLine();
           Console.WriteLine("enter price");
           int price = Int32.Parse(Console.ReadLine());
           con.Open();


           cmd.Parameters.AddWithValue("@name", name);
           cmd.Parameters.AddWithValue("@vend",vendor);
           cmd.Parameters.AddWithValue("@cat", category);
           cmd.Parameters.AddWithValue("@price",price);
           cmd.CommandText = "insert into product values(@name,@vend,@cat,@price)";
           cmd.Connection=con;
           cmd.ExecuteNonQuery();
           con.Close();



       }
       public void GetDetail()
       {
           Console.WriteLine("enter product name");
           string name = Console.ReadLine();
           cmd.CommandText = "select * from product where product_name=@name";
           cmd.Connection = con;
           cmd.Parameters.AddWithValue("@name", name);
           con.Open();
           SqlDataReader rd = cmd.ExecuteReader();
           while(rd.Read())
           {
               Console.WriteLine(rd[0]+"  "+rd[1]+"  "+rd[2]+"  "+rd[3]+"  "+rd[4]);
           }
         
           con.Close();
       }
       public void Sort()
       {
           cmd.CommandText = "select product_name from product order by product_name";
           cmd.Connection = con;
           con.Open();
           SqlDataReader rd = cmd.ExecuteReader();
           while (rd.Read())
           {
               Console.WriteLine(rd[0]);
           }
       }
      public void Update()
      {
          Console.WriteLine("enter product id");
          int id=Int32.Parse(Console.ReadLine());
          Console.WriteLine("enter new price");
          int price=Int32.Parse(Console.ReadLine());
          cmd.CommandText="update product set price=@price where id=@id";
          cmd.Parameters.AddWithValue("@id",id);
          cmd.Parameters.AddWithValue("@price",price);
          cmd.Connection = con;
          con.Open();
          int res=cmd.ExecuteNonQuery();
          con.Close();


      }

       }

    }

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Configuration;
using System.Security.Cryptography;
using System.Data;
using System.Data.SqlClient;
namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("please enter password");
            string plaintext = Console.ReadLine();
            Console.WriteLine(plaintext);
            Program p = new Program();
            string inp=p.Encrypt(plaintext);
            
            Console.WriteLine(inp);
            Console.WriteLine(inp.Length);
         
            
           
            
               
                SqlConnection con = new SqlConnection("data source=.\\SQLEXPRESS;database=PASSWORD;integrated security=true;");
                SqlCommand cmd = new SqlCommand();

                cmd.Parameters.AddWithValue("@val", inp);
                cmd.CommandText = "insert into checkwa values(@val)";
                con.Open();
                cmd.Connection = con;
                cmd.ExecuteNonQuery();
                con.Close();
                Console.WriteLine("please enter password to verify");
                string verfiy=Console.ReadLine();
                con.Open();
                cmd.CommandText="select pwd from checkwa";
                cmd.Connection = con;
                SqlDataReader rd = cmd.ExecuteReader();
                int flag = 0;
                while (rd.Read())
                {
                    string match = Convert.ToString(rd[0]);
                    if(verfiy.Equals(p.Decrypt(match)))
                    {
                        Console.WriteLine("match found");
                        flag = 1;
                        break;
                    }

                }
            if(flag==0)
                Console.WriteLine("match not found");
          
        }
        public string Encrypt(string plainText)
        {
            if (plainText == null) throw new ArgumentNullException("plainText");

            //encrypt data
            var data = Encoding.Unicode.GetBytes(plainText);
            byte[] encrypted = ProtectedData.Protect(data, null, DataProtectionScope.LocalMachine);

            //return as base64 string
            return Convert.ToBase64String(encrypted);
        }
        public string Decrypt(string cipher)
        {
            if (cipher == null) throw new ArgumentNullException("cipher");

            //parse base64 string
            byte[] data = Convert.FromBase64String(cipher);

            //decrypt data
            byte[] decrypted = ProtectedData.Unprotect(data, null, DataProtectionScope.LocalMachine);
            return Encoding.Unicode.GetString(decrypted);
        }

    }
}
